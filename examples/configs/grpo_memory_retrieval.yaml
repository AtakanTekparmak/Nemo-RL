# GRPO configuration for memory retrieval training

grpo:
  num_prompts_per_step: 8
  num_generations_per_prompt: 4
  max_rollout_turns: 6
  max_num_steps: 1000000
  normalize_rewards: true
  use_leave_one_out_baseline: true
  val_period: 10
  val_at_start: false
  max_val_samples: 64
  val_batch_size: 64

loss_fn:
  reference_policy_kl_penalty: 0.01
  ratio_clip_min: 0.2
  ratio_clip_max: 0.2
  use_on_policy_kl_approximation: false
  use_importance_sampling_correction: false
  token_level_loss: true

checkpointing:
  enabled: true
  checkpoint_dir: "results/grpo-memory"
  metric_name: "val_reward"
  higher_is_better: true
  keep_top_k: 3
  save_period: 10

policy:
  model_name: "Qwen/Qwen3-4B"
  tokenizer:
    name: ${policy.model_name}
  train_global_batch_size: 64
  train_micro_batch_size: 4
  generation_batch_size: 8
  logprob_batch_size: 4
  max_total_sequence_length: 512
  precision: "bfloat16"
  fsdp_offload_enabled: false
  activation_checkpointing_enabled: false
  dtensor_cfg:
    enabled: true
    cpu_offload: False
    sequence_parallel: false
    activation_checkpointing: false
    tensor_parallel_size: 1
    context_parallel_size: 1
    custom_parallel_plan: null
  dynamic_batching:
    enabled: True
    train_mb_tokens: ${mul:${policy.max_total_sequence_length}, ${policy.train_micro_batch_size}}
    logprob_mb_tokens: ${mul:${policy.max_total_sequence_length}, ${policy.logprob_batch_size}}
    sequence_length_round: 64
  make_sequence_length_divisible_by: ${policy.dtensor_cfg.tensor_parallel_size}
  max_grad_norm: 1.0
  optimizer:
    name: "torch.optim.AdamW"
    kwargs:
      lr: 5.0e-6
      weight_decay: 0.01
      betas: [0.9, 0.999]
      eps: 1e-8
      foreach: False
      fused: False
  scheduler:
    - name: "torch.optim.lr_scheduler.LinearLR"
      kwargs:
        start_factor: 0.1
        end_factor: 1.0
        total_iters: 50
    - name: "torch.optim.lr_scheduler.ConstantLR"
      kwargs:
        factor: 1.0
        total_iters: 10000000000
    - milestones: [50]
  generation:
    backend: "vllm"
    max_new_tokens: ${policy.max_total_sequence_length}
    temperature: 1.0
    top_p: 1.0
    top_k: null
    stop_token_ids: null
    stop_strings: null
    vllm_cfg:
      async_engine: false
      precision: ${policy.precision}
      tensor_parallel_size: 1
      pipeline_parallel_size: 1
      gpu_memory_utilization: 0.6
      max_model_len: ${policy.max_total_sequence_length}
    colocated:
      enabled: true
      resources:
        gpus_per_node: null
        num_nodes: null

data:
  dataset_path: "dataset.json"
  max_input_seq_length: ${policy.max_total_sequence_length}
  prompt_file: null
  system_prompt_file: null
  dataset_name: "MemoryRetrieval"

env:
  memory_retrieval:
    max_turns: 6

logger:
  log_dir: "logs"
  num_val_samples_to_print: 0
  wandb_enabled: false
  tensorboard_enabled: false
  monitor_gpus: true
  wandb:
    project: "memory-retrieval"
    name: "memory-retrieval"
  tensorboard: {}
  gpu_monitoring:
    collection_interval: 10
    flush_interval: 10

cluster:
  gpus_per_node: 1
  num_nodes: 1
